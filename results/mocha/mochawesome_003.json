{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-16T23:49:24.828Z",
    "end": "2024-08-16T23:49:24.957Z",
    "duration": 129,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7a8d3657-825b-4b4f-b3ad-f150ddb99f12",
      "title": "",
      "fullFile": "cypress\\e2e\\books_api_perf_spec.cy.js",
      "file": "cypress\\e2e\\books_api_perf_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6a32f477-5e29-42f2-8517-fae5c2d31fe7",
          "title": "Books Collection API - Performance Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should respond within 200ms when adding a book",
              "fullTitle": "Books Collection API - Performance Tests should respond within 200ms when adding a book",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const sampleBook = {\n  title: 'Performance Testing Book',\n  author: 'Test Author',\n  year: 2024\n};\nconst startTime = performance.now();\ncy.request({\n  method: 'POST',\n  url: '/books',\n  headers: {\n    'Authorization': `Bearer ${token}`\n  },\n  body: sampleBook,\n  failOnStatusCode: false\n}).then(response => {\n  const endTime = performance.now();\n  const duration = endTime - startTime;\n  expect(response.status).to.eq(201);\n  expect(duration).to.be.lessThan(200);\n});",
              "err": {},
              "uuid": "df8e5684-df0a-4aa0-850c-9d55a0ac047c",
              "parentUUID": "6a32f477-5e29-42f2-8517-fae5c2d31fe7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should respond within 200ms when retrieving a book",
              "fullTitle": "Books Collection API - Performance Tests should respond within 200ms when retrieving a book",
              "timedOut": null,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bookId = 1;\nconst startTime = performance.now();\ncy.request({\n  method: 'GET',\n  url: `/books/${bookId}`,\n  headers: {\n    'Authorization': `Bearer ${token}`\n  },\n  failOnStatusCode: false\n}).then(response => {\n  const endTime = performance.now();\n  const duration = endTime - startTime;\n  expect(response.status).to.eq(200);\n  expect(duration).to.be.lessThan(200);\n});",
              "err": {},
              "uuid": "68a19c01-0914-4200-bcbf-ac3ed51cbc2d",
              "parentUUID": "6a32f477-5e29-42f2-8517-fae5c2d31fe7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df8e5684-df0a-4aa0-850c-9d55a0ac047c",
            "68a19c01-0914-4200-bcbf-ac3ed51cbc2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 99,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "results/mocha",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}